
plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'java'
}

group = 'com.mall.wms'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

bootJar {
    exclude 'application.properties'
    exclude 'application.yml'
    exclude 'banner.txt'
}

allprojects{
    repositories {
        //默认设置阿里云仓库
        def REPOSITORY_URL = 'http://maven.aliyun.com/nexus/content/groups/public/'
        all { ArtifactRepository repo ->
            def url = repo.url.toString()
            //其他国外仓库当做备用仓库
            if ((repo instanceof MavenArtifactRepository) && (url.startsWith('https://repo1.maven.org/maven2') || url.startsWith('https://jcenter.bintray.com'))) {
                project.logger.lifecycle 'Repository ${repo.url} replaced by $REPOSITORY_URL .'
                remove repo
            }
        }
        maven {
            url REPOSITORY_URL
        }
    }
}

configurations {
    //去除不需要的jar包
    compile.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    compile.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    compile.exclude module: 'logback-classic'
    compile.exclude module: 'log4j-over-slf4j'
    compile.exclude group: 'org.apache.tomcat', module: 'tomcat-jdbc'
    compile.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
}

dependencies {
    //https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter
    compile group: 'org.springframework.boot', name: 'spring-boot-starter'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-undertow
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-undertow'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-redis
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: '2.2.2.RELEASE'
    // https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter
    compile group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '1.3.2'
    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.46'
    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.18'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-log4j2
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: '2.2.2.RELEASE'
    // https://mvnrepository.com/artifact/com.github.pagehelper/pagehelper-spring-boot-starter
    compile group: 'com.github.pagehelper', name: 'pagehelper-spring-boot-starter', version: '1.2.10'
    //qiniu SDK
    compile group: 'com.qiniu', name: 'qiniu-java-sdk', version: '7.2.27'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-log4j2
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: '2.2.2.RELEASE'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-amqp
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-amqp', version: '2.2.2.RELEASE'
    // https://mvnrepository.com/artifact/io.swagger/swagger-annotations
    compile group: 'io.swagger', name: 'swagger-annotations', version: '1.5.22'
    // https://mvnrepository.com/artifact/io.shardingjdbc/sharding-jdbc-core
    compile group: 'io.shardingjdbc', name: 'sharding-jdbc-core', version: '2.0.3'
    // https://mvnrepository.com/artifact/org.apache.shiro/shiro-core
    compile group: 'org.apache.shiro', name: 'shiro-core', version: '1.5.3'


    /* annotationProcessor 'org.projectlombok:lombok:1.18.8'
     compileOnly 'org.projectlombok:lombok:1.18.8'
     testAnnotationProcessor 'org.projectlombok:lombok:1.18.8'
     testCompileOnly 'org.projectlombok:lombok:1.18.8'*/
}

static def releaseTime() {
    return new Date().format("yyyyMMddHHmm", TimeZone.getDefault())
}

//删除 旧的.jar包 任务
task clearJar(type: Delete) {
    FileTree tree = fileTree("build/libs/")
    tree.visit {
        element ->
            if (element.getName().endsWith(".jar")) {
                println "$element.file.name" + " " + element.getName()
                delete element.file
            }
    }
}
task makeJar(type: Jar){
    //指定生成的jar名
    baseName 'mall_wms_api_'+ releaseTime()
    //从哪里打包class文件
    from('build/intermediates/javac/debug/compileDebugJavaWithJavac/classes/com/hd/test/sdk/')
    //打包到jar后的目录结构
    into('com/hd/test/sdk/')
    //去掉不需要打包的目录和文件
    exclude('BuildConfig.class','R.class')
    //去掉R$开头的文件
    exclude{it.name.startsWith('R$')}
}
makeJar.dependsOn(clearJar,build)


